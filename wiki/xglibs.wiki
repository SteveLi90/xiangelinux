#summary 包编译脚本的写作方法

= 0. 简介 =

本文描述了弦歌包管理系统[xgpkg gpkg]和编译脚本库之间的接口，和示例脚本的写作方法。<br>
每个发行版本都有自己的编译脚本库，如Gentoo的portage, Slackware的slack build, Arch的abs等。目前的问题是没有统一的编译脚本接口，不能互相通用。不过可以互相借鉴。


= 1. 接口 =

对编译脚本来说，接口分为输入接口和输出接口两部分。接口由bash的变量和函数实现。

== 1.1 输入接口 ==

输入接口主要是路径信息，编译参数等，由变量实现, 列表如下:

||变量名称||描述||示例取值||备注||
||$T||软件包类别||"app-sys"||||
||$N||软件包名称||"autoconfg"||||
||$V||软件包版本||"2.6.31"||||
||$R||软件包修订版本||"-r1"||||
||$XGPATH_SOURCE||源码所在的目录||"/var/xiange/sources"||||
||$XGPATH_DEST||安装/打包目录||"/tmp/xiange/pack/$N-$V"||||
||$CFLAGS||编译参数||"-march=native -mtune=native -O2 -fomit-frame-pointer -pipe"||系统变量||
||$CXXFLAGS||C++编译参数||同$CFLAGS||系统变量||
||XGB_CONFIG||autotools配置参数||--prefix=/usr/||进行configure时, 可以指定$XGB_CONFIG做参数. 软件包特定的部分用 XGB_CONFIG+=" --para=abc "实现.||

关于$T, $N, $V, $R, 可以参见[xgpkg gpkg]中的软件包命名规则。


== 1.2 输出接口 ==

= 2. 示例脚本==

= 3. 模板 ==